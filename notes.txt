"src" folder will hold our source code. (Here our input resides)
"build" folder will contain all the files and artifacts when we build our react application for deployment. (Here our output resides i.e. bundled code)

https://www.typescriptlang.org/docs/handbook/tsconfig-json.html
https://www.typescriptlang.org/tsconfig
The presence of a tsconfig.json file in a directory indicates that the directory is the root of a TypeScript project. The tsconfig.json file specifies the root files and the compiler options required to compile the project.
Learn more about tsconfig.json at above links.

https://www.typescriptlang.org/tsconfig#module
https://javascript.info/modules-dynamic-imports  -- more about dynamic imports
https://nextjs.org/docs/advanced-features/dynamic-import  -- dynamic import in NextJS
ES2020 adds support for dynamic imports, and import.meta

In index.tsx inside the src folder:
Here, we mounted the app component onto the root element. Now we have something which can be rendered in the browser. However, thiss react code cannot be understood by the browser as is. We need babel to convert our react and typescript code into JavaScript.

WebPack is a module bundler. The code we write across multiple components will be bundled by webpack which can then be reference in the index.html file.
