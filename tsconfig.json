
{
	// compilerOptions are focused on typechecking and not for code transpilation. We will use babel for transpilation.
	// https://www.typescriptlang.org/docs/handbook/tsconfig-json.html -- Contains about tsconfig.json file
	// https://www.typescriptlang.org/tsconfig -- This contains configuration keys and their usage.

	"compilerOptions": {
	  "target": "ES6" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */,
	  "module": "ESNext" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */,
	  "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */ /* Type declaration files to be included in compilation. */,
	  "lib": [
		"DOM",
		"ESNext"
	  ] /* Specify library files to be included in the compilation. */,
	  "jsx": "react-jsx" /* Specify JSX code generation: 'preserve', 'react-native', 'react' or 'react-jsx'. */,
	  "noEmit": true /* Do not emit outputs. */,
	  "isolatedModules": true /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */,
	  "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
	  "strict": true /* Enable all strict type-checking options. */,
	  "skipLibCheck": true /* Skip type checking of declaration files. */,
	  "forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */,
	  "resolveJsonModule": true
	  // "allowJs": true /* Allow javascript files to be compiled. Useful when migrating JS to TS */,
	  // "checkJs": true /* Report errors in .js files. Works in tandem with allowJs. */,
	},
	"include": ["src/**/*"]
  }
  
// lib: It tells which files to support. The files it will be supporting, only those can be used for compilation.

// https://www.typescriptlang.org/tsconfig#jsx
// https://legacy.reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html
// https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md#motivation
// jsx:react-jsx : It enables us to leave out the "input React" line from every component.

// resolveJsonModule: true // This provide support of JSON files